/**
 * User: Soezen
 * Date: 1/11/13
 * Time: 18:17
 */

var jade = require('jade');
var fs = require('fs');

function relativePath(folder) {
    if (process.argv.indexOf('local') >= 0 && folder.indexOf('/') != 0) {
        return './app/' + folder + '/';
    }
    return folder + '/';
}

function loadFile(response, folder, filename, ext) {
    // load jade template and always within the main template
    fs.readFile(relativePath(folder) + filename, function(error, content) {
        if (error) {
            handleError(response, error);
            return;
        }
        response.writeHeader(200, {"Content-Type": contentType(ext)});
        response.write(content);
        response.end();
    });
}

function loadJade(response, filename, locals) {
    fs.readFile(relativePath('resources/jade') + filename, function(error, content) {
        if (error) {
            handleError(response, error);
            return;
        }
        var options = {
            pretty: true,
            self: true
        };
        var html = jade.compile(content, options)(locals);
        response.write(html);
        response.end();
    });
}

function loadHtml(response, filename) {
    loadFile(response, 'resources/html', filename, 'html');
}

function loadIcon(response, filename) {
    loadFile(response, 'resources/img/icons', filename, 'ico');
}

function loadJavascript(response, filename) {
    loadFile(response, 'resources/js', filename, 'js');
}

function loadCss(response, filename) {
    loadFile(response, 'resources/css', filename, 'css');
}

function contentType(ext) {
    switch (ext) {
        case 'jpg':
            return 'image/jpg';
        case 'html':
            return 'text/html';
        case 'css':
            return 'text/css';
        case 'js':
            return 'text/javascript';
        default:
            return 'text/plain';
    }
}

function handleError(response, error) {
    response.writeHeader(500, {"Content-Type": contentType('html')});
    response.write("ERROR: " + error);
    response.end();
}

exports.load = loadFile;
exports.loadHtml = loadHtml;
exports.loadIcon = loadIcon;
exports.loadJavascript = loadJavascript;
exports.loadCss = loadCss;
exports.loadJade = loadJade;