/**
 * User: Soezen
 * Date: 31/10/13
 * Time: 20:53
 */

function PriorityQueue(comparator) {

    var queuedItems = [];

    function size() {
        return queuedItems.length;
    }

    function contains(item) {
        return queuedItems.indexOf(item) != -1;
    }

    function hasNext() {
        return size() != 0;
    }

    function next() {
        return hasNext()
            ? queuedItems.pop()
            : null;
    }

    function push(item) {
        if (!contains(item)) {
            queuedItems.push(item);
            queuedItems.sort(comparator);
        }
    }

    function pushAll(items) {
        // TODO remove this method and make push method to accept more than one argument
        // put each argument in list
        for (var i in items) {
            if (items.hasOwnProperty(i)) {
                var item = items[i];
                if (!contains(item)) {
                    queuedItems.push(item);
                }
            }
        }
        queuedItems.sort(comparator);
    }

    function forEach(doThis) {
        while (hasNext()) {
            var current = next();
            doThis(current);
        }
    }

    return {
        hasNext: hasNext,
        next: next,
        push: push,
        pushAll: pushAll,
        forEach: forEach,
        contains: contains,
        size: size
    };
}

function flipCoin(percentage) {
    var random;
    return percentage >= random;
}

exports.PriorityQueue = PriorityQueue;
exports.flipCoin = flipCoin;